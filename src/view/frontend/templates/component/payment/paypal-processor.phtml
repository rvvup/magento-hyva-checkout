<?php
/** @var \Magento\Framework\View\Element\Template $block */
/** @var \Magento\Framework\Escaper $escaper */
?>
<div wire:ignore>
    <style>
        .rvvup_PAYPAL_place_order_button {
            display: none !important;
        }
    </style>
    <script>
        window.addEventListener('rvvup:methods:paypal:load-buttons', function(){
            const getButtonStyle = () => {
                if (typeof rvvup_parameters !== 'object') {
                    return {
                        layout: 'vertical',
                        color: 'gold',
                        shape: 'rect',
                        label: 'paypal',
                        tagline: false,
                    };
                }

                const layout = rvvup_parameters?.settings?.paypal?.product?.button?.layout?.value || 'vertical';
                const color = rvvup_parameters?.settings?.paypal?.product?.button?.color?.value || 'gold';
                const shape = rvvup_parameters?.settings?.paypal?.product?.button?.shape?.value || 'rect';
                const label = rvvup_parameters?.settings?.paypal?.product?.button?.label?.value || 'paypal';
                const tagline = rvvup_parameters?.settings?.paypal?.product?.button?.tagline || false;
                const size = rvvup_parameters?.settings?.paypal?.product?.button?.size || null;

                let style = {
                    layout: layout,
                    color: color,
                    shape: shape,
                    label: label,
                    tagline: tagline,
                };

                if (size !== null) {
                    style.height = size;
                }

                return style;
            }
            const component = Magewire.find('<?= $escaper->escapeJs($block->getNameInLayout()) ?>');

            const createPaypalContainer = function (btnIndex, placeOrderButton) {
                const divId = 'rvvup-paypal-button-container-' + btnIndex;

                if (document.getElementById(divId)) {
                    return null;
                }

                const paypalDiv = document.createElement('div');
                paypalDiv.id = divId;
                paypalDiv.className = 'rvvup-paypal-button z-0';
                if (placeOrderButton.className && placeOrderButton.className.indexOf("w-full") > -1) {
                    paypalDiv.className += ' w-full';
                }
                return paypalDiv;
            };

            const replacePlaceOrderWithPaypal = function (placeOrderButton, paypalContainer) {
                placeOrderButton.classList.add('rvvup_PAYPAL_place_order_button');
                placeOrderButton.appendChild(paypalContainer);
                placeOrderButton.parentNode.insertBefore(paypalContainer, placeOrderButton);
            };

            let placeOrderButtons = document.querySelectorAll('.nav-main .btn-primary');
            if (placeOrderButtons.length === 0) {
                console.error('Error: Place order button not found')
                return;
            }
            let btnIndex = 0;
            placeOrderButtons.forEach((placeOrderButton) => {
                const paypalContainer = createPaypalContainer(btnIndex++, placeOrderButton);

                if (paypalContainer) {
                    replacePlaceOrderWithPaypal(placeOrderButton, paypalContainer);

                    //render paypal button
                    rvvup_paypal.Buttons({
                        style: getButtonStyle(),

                        createOrder: () => {
                            /** Hide loader */
                            let magewire = document.getElementById('magewire-loader');
                            magewire.children[0].style.display = 'none';
                            return component.paymentActions.authorization.value;
                        },
                        onApprove: () => {
                            if (rvvup_parameters.settings.paypal.capture.type === "MANUAL") {
                                let authorizationUrl = window.BASE_URL + 'rvvup/payment/authorize' + '?form_key=' + hyva.getFormKey();
                                fetch(
                                    authorizationUrl,
                                    {
                                        method: 'post',
                                        headers: {contentType: 'application/json'}
                                    }
                                )
                            }
                            window.dispatchEvent(new CustomEvent('rvvup:update:showModal', {
                                detail: {
                                    redirectUrl: component.paymentActions.capture.value
                                }
                            }))
                        },
                        onCancel: () => {
                            var url = window.BASE_URL + 'rvvup/payment/cancel' + '?form_key=' + hyva.getFormKey();
                            fetch(
                                url,
                                {
                                    method: 'post',
                                    headers: {contentType: 'application/json'}
                                }
                            )
                            let magewire = document.getElementById('magewire-loader');
                            magewire.children[0].style.display = 'none';
                        },
                        onError: (error) => {
                            var url = window.BASE_URL + 'rvvup/payment/cancel' + '?form_key=' + hyva.getFormKey();
                            fetch(
                                url,
                                {
                                    method: 'post',
                                    headers: {contentType: 'application/json'}
                                }
                            )
                            let magewire = document.getElementById('magewire-loader');
                            magewire.children[0].style.display = 'none';
                            window.rvvup_error = error;
                            window.location.reload();
                        },
                        onClick: (data, actions) => {
                            let magewire = document.getElementById('magewire-loader');
                            magewire.children[0].style.display = 'block';
                            return component.loadPaymentActions()
                                .then(function () {
                                    return actions.resolve();
                                });
                        },
                    }).render('#' + paypalContainer.id);
                }
            });

        });
        window.addEventListener('checkout:payment:method-activate', (event) => {
            let paypalButtons = document.querySelectorAll('.nav-main .rvvup-paypal-button');
            if (event.detail.method !== 'rvvup_PAYPAL') {
                if (paypalButtons.length > 0) {
                    paypalButtons.forEach((button) => {
                        button.remove();
                    });
                    let placeOrderButtons = document.querySelectorAll('.nav-main .btn-primary');
                    placeOrderButtons.forEach((button) => {
                        button.classList.remove('rvvup_PAYPAL_place_order_button');
                    });
                }

                return;
            }

            const component = Magewire.find('<?= $escaper->escapeJs($block->getNameInLayout()) ?>');
            hyvaCheckout.payment.activate('rvvup_PAYPAL', {

                initialize() {
                    let placeOrderButtons = document.querySelectorAll('.nav-main .btn-primary');
                    if (placeOrderButtons.length > 0) {
                        let magewire = document.getElementById('magewire-loader');
                        magewire.children[0].style.display = 'block';
                        this.loadButtons();
                    }
                },

                loadButtons() {
                    if (component.isExpressPayment) {
                        let magewire = document.getElementById('magewire-loader');
                        magewire.children[0].style.display = 'none';
                        return;
                    }

                    window.dispatchEvent(new CustomEvent('rvvup:methods:paypal:load-buttons'));

                    let magewire = document.getElementById('magewire-loader');
                    magewire.children[0].style.display = 'none';
                },

                placeOrderViaJs() {
                    return document.querySelector('[wire\\:key="rvvup_PAYPAL"].active') !== null;
                },

                placeOrder() {
                    return component.placeOrder().then(() => {
                        // Authorize here instead of onApprove for express as the PayPal order is updated and updates
                        // can only be made before the PayPal order is authorized.
                        if (rvvup_parameters.settings.paypal.capture.type === "MANUAL") {
                            let authorizationUrl = window.BASE_URL + 'rvvup/payment/authorize' + '?form_key=' + hyva.getFormKey();
                            fetch(
                                authorizationUrl,
                                {
                                    method: 'post',
                                    headers: {contentType: 'application/json'}
                                }
                            )
                        }
                    });
                },
            }, document.querySelector('[wire\\:key="rvvup_PAYPAL"].active'))
        });
    </script>
</div>
