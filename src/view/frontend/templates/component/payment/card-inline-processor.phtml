<?php
declare(strict_types=1);

use Magento\Framework\Escaper;
use Magento\Framework\View\Element\Template;

/** @var Template $block */
/** @var Escaper $escaper */
/** @var \Rvvup\PaymentsHyvaCheckout\Magewire\Checkout\Payment\CardProcessor $magewire */
?>
<div wire:ignore>
    <script>
        (() => {
            let ST = null;
            let validationPromise = null;
            const confirmCardAuthorization = (confirmAuthorizationUrl, data) => {
                let submitData = {
                    auth: data.jwt,
                };
                if (data.threedresponse) {
                    submitData["threeD"] = data.threedresponse;
                }
                return new Promise((resolve, reject) => {
                    const attemptConfirmFetch = (remainingRetries) => {
                        fetch(confirmAuthorizationUrl, {
                            method: "POST",
                            headers: {
                                "Content-Type": "application/json",
                            },
                            body: JSON.stringify(submitData),
                        })
                            .then((response) => {
                                if (!response.ok) {
                                    return response.json().then((errorData) => {
                                        const code = errorData.errorCode || null;
                                        const message = errorData.errorMessage || "Something went wrong when authorizing your payment.";
                                        const canRetry = response.status === 404 && code === "card_authorization_not_found";
                                        if (canRetry && remainingRetries > 0) {
                                            setTimeout(function () {
                                                attemptConfirmFetch(remainingRetries - 1);
                                            }, 2000);
                                            return;
                                        }
                                        reject(message);
                                    });
                                }
                                resolve(response.json());
                            })
                            .catch((error) => {
                                reject(error.messages ? error.messages : "Something went wrong, please try again.");
                            });
                    };

                    attemptConfirmFetch(5);
                });
            };
            window.addEventListener('checkout:payment:method-activate', event => {
                if (event.detail.method !== 'rvvup_CARD') {
                    return;
                }

                const component = Magewire.find('<?= $escaper->escapeJs($block->getNameInLayout()) ?>');

                hyvaCheckout.payment.activate('rvvup_CARD', {
                    initialize() {
                        ST = SecureTrading({
                            jwt: '<?= $magewire->getInitializationToken() ?>',
                            animatedCard: true,
                            livestatus: <?= $magewire->getLiveStatus() ?>,
                            buttonId: "tp_place_order",
                            deferInit: true,
                            submitOnSuccess: false,
                            panIcon: true,
                            stopSubmitFormOnEnter: true,
                            formId: "st-form",
                            submitCallback: function (data) {
                                confirmCardAuthorization(component.paymentActions.confirmAuthorization.value, data)
                                    .then(() => {
                                        window.dispatchEvent(new CustomEvent('rvvup:update:showModal', {
                                            detail: {
                                                redirectUrl: component.paymentActions.capture.value
                                            }
                                        }));
                                    }).catch((error) => {
                                    window.dispatchMessages && window.dispatchMessages([{
                                        type: 'error',
                                        text: error
                                    }], 5000);
                                });
                            },
                            errorCallback: function () {
                                /** Hide loader */
                                document.getElementById('magewire-loader').children[0].style.display = 'none';
                                validationPromise.resolve(false);
                                var url = window.BASE_URL + 'rvvup/payment/cancel' + '?form_key=' + hyva.getFormKey();
                                fetch(
                                    url,
                                    {
                                        method: 'post',
                                        headers: {contentType: 'application/json'}
                                    }
                                )
                            },
                            translations: {
                                "Card number": '<?php echo $magewire->getTranslation('label', 'cardNumber', 'Card Number'); ?>',
                                "Expiration date": '<?php echo $magewire->getTranslation('label', 'expiryDate', 'Expiration Date'); ?>',
                                "Security code": '<?php echo $magewire->getTranslation('label', 'securityCode', 'Security Code'); ?>',
                                Pay: '<?php echo $magewire->getTranslation('button', 'pay', 'Pay'); ?>',
                                Processing: '<?php echo $magewire->getTranslation('button', 'processing', 'Processing'); ?>',
                                "Field is required":
                                    '<?php echo $magewire->getTranslation('error', 'fieldRequired', 'Field is required'); ?>',
                                "Value is too short":
                                    '<?php echo $magewire->getTranslation('error', 'valueTooShort', 'Value is too short'); ?>',
                                "Value mismatch pattern":
                                    '<?php echo $magewire->getTranslation('error', 'valueMismatch', 'Value is invalid'); ?>',
                            },
                            styles: {
                                "background-color-input": "#FFFFFF",
                                "border-color-input": "#EBEBF2",
                                "border-radius-input": "8px",
                                "border-size-input": "1px",
                                "color-input": "#050505",
                                "border-color-input-error": "#ff4545",
                                "color-label": "#050505",
                                "position-left-label": "0.5rem",
                                "font-size-label": "1.2rem",
                                "font-size-message": "1rem",
                                "space-outset-message": "0rem 0px 0px 0.5rem",
                            },
                        });

                        ST.Components();
                    },

                    validate() {
                        return new Promise((resolve, reject) => {
                            /** Show loader */
                            let magewire = document.getElementById('magewire-loader');
                            magewire.children[0].style.display = 'block';

                            validationPromise = {resolve, reject};

                            component.loadPaymentActions().then(() => {
                                if (!component.paymentActions || !component.paymentActions.authorization) {
                                    document.getElementById('magewire-loader').children[0].style.display = 'none';
                                    return;
                                }
                                ST.updateJWT(component.paymentActions.authorization.value);
                                document.getElementById('tp_place_order').click();
                            });
                        });
                    },

                    placeOrderViaJs() {
                        return document.querySelector('[wire\\:key="rvvup_CARD"].active') !== null;
                    },

                    placeOrder() {
                        return component.placeOrder();
                    }
                }, document.querySelector('[wire\\:key="rvvup_CARD"].active'));
            });
        })();
    </script>
</div>
