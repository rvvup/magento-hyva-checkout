<?php

use Hyva\Theme\Model\ViewModelRegistry;
use Hyva\Theme\ViewModel\Modal;
use Magento\Framework\Escaper;
use Magento\Framework\View\Element\Template;

/** @var ViewModelRegistry $viewModels */
/** @var Modal $modelViewModel */

/** @var Escaper $escaper */
/** @var Template $block */
/** @var Hyva\Theme\ViewModel\HyvaCsp $hyvaCsp */

$modelViewModel = $viewModels->require(Modal::class);

$modal = $modelViewModel->createModal()
    ->positionCenter()
    ->removeDialogClass('p-10', 'rounded-lg')
    ->addDialogClass('relative rounded-xl flex flex-col text-center mx-8 sm:mx-16')
    ->withAriaLabelledby('modal-title');
?>
<div id="rvvup-modal" x-data="rvvupPaymentsHyvaCheckoutComponentPaymentModal">
    <?= /** @noEscape */ $modal->withContent(
        <<<END_OF_CONTENT
            <template x-if="iframeUrl">
                <iframe
                    :src="iframeUrl"
                    allow="clipboard-read; clipboard-write; payment"
                    class="rvvup-modal border-0"
                ></iframe>
            </template>

    END_OF_CONTENT
    );?>
</div>

<script>
    function initRvvupModal() {
        return {
            iframeUrl: null,
            canCloseModal: true,
            init() {
                window.addEventListener('rvvup:update:showModal', event =>{
                    this.show('<?= $escaper->escapeHtmlAttr($modal->getDialogRefName()) ?>');

                    this.iframeUrl = event.detail.redirectUrl;
                });

                window.addEventListener('rvvup:reload', () => {
                    window.location.reload();
                });

                window.addEventListener('message', event => {
                    switch (event.data.type) {
                        case "rvvup-payment-modal|close": {
                            this.iframeUrl = null;
                            this.canCloseModal = true;
                            this.hide();
                            break;
                        }
                        case "rvvup-payment-modal|prevent-close": {
                            this.canCloseModal = !event.data.preventClose;
                            break;
                        }
                        case "rvvup-payment-modal|resize": {
                            let height = event.data.hasOwnProperty('height') ? event.data.height : null,
                                width = event.data.hasOwnProperty('width') ? event.data.width : null;

                            let windowHeight = window.innerHeight,
                                windowWidth = window.innerWidth,
                                chosenWidth = width > windowWidth ? windowWidth : width,
                                chosenHeight = height > windowHeight ? windowHeight : height,
                                finalWidth = width === 'max' ? windowWidth - 100 : chosenWidth,
                                finalHeight = height === 'max' ? windowHeight - 100 : chosenHeight;

                            document.querySelector('.rvvup-modal').style.width = finalWidth + 'px';
                            document.querySelector('.rvvup-modal').style.height = finalHeight + 'px';
                            break;
                        }
                        case "rvvup-info-widget|resize": {
                            let height = event.data.hasOwnProperty('height') ? event.data.height : null,
                                width = event.data.hasOwnProperty('width') ? event.data.width : null;

                            document.querySelector('.rvvup-summary').style.width = width + 'px';
                            document.querySelector('.rvvup-summary').style.height = height + 'px';
                            break;
                        }
                        default:
                            break;
                    }
                });
                const originalHide = this.hide;
                this.hide = (value) => {
                    if (!this.canCloseModal) return;
                    var url = window.BASE_URL + 'rvvup/payment/cancel' + '?form_key=' + hyva.getFormKey();
                    fetch(
                        url,
                        {
                            method: 'post',
                            headers: {contentType: 'application/json'}
                        }
                    )
                    return originalHide.call(this, value);
                }
            },
        }
    }
</script>
<?php $hyvaCsp->registerInlineScript() ?>
<script>
<?php /** Generated with hyva-csp-helper.php */ ?>
function rvvupPaymentsHyvaCheckoutComponentPaymentModal() {
    return Object.assign(
        Object.assign({}, hyva.modal(), initRvvupModal())
    )
}
window.addEventListener('alpine:init', () => Alpine.data('rvvupPaymentsHyvaCheckoutComponentPaymentModal', rvvupPaymentsHyvaCheckoutComponentPaymentModal), {once: true});
</script>
<?php $hyvaCsp->registerInlineScript() ?>